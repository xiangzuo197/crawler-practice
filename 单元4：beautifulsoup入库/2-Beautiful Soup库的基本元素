Beautiful Soup库的理解
<p>..</p>:标签Tag
<p class="title">...</p>
<p </p>名称Name成对出现
class="title">属性Attributes 0个或多个

最常用的引用
from bs4 import Beautiful Soup

HTML<-->标签树<-->BeautifulSoup类

>>> from bs4 import BeautifulSoup
>>> soup = BeautifulSoup("<html>data<html>","html.parser")
>>> soup2 = BeautifulSoup(open("D://demo.html"),"html.parser")
BeautifulSoup对应一个HTML/XML文档的全部内容

Beautiful Soup库解析器

bs4的HTML解析器   BeautifulSoup(mk.'html.parser')  #需要安装bs4库
lxml的HTML解析器  BeautifulSoup(mk.'lxml')   pip install lxml
lxml的XML解析器   BeautifulSoup(mk.'xml')    pip install lxml
html5lib的解析器  BeautifulSoup(mk.'html5lib') pip install html5lib

Beautiful Soup类的基本元素

基本元素
Tag          #标签，最基本的信息组织单元，分别用<>和</>表明开头和结尾
Name         #标签的名字，<p>...</p>的名字是'p',格式：<tag>.name
Attributes   #标签的属性，字典形式组织，格式：<tag>.attrs
NavigableString #标签内非属性字符串，<>...</>中字符串，格式：<tag>.string
Comment        #标签内字符串的注释部分，一种特殊的Comment类型

>>> from bs4 import BeautifulSoup
>>> soup = BeautifulSoup(demo,"html.parser")
>>> soup.title
<title>This is a python demo page</title>
>>> tag = soup.a
>>> tag
<a class="py1" href="http://www.icourse163.org/course/BIT-268001" id="link1">Basic Python</a>
>>> from bs4 import BeautifulSoup
>>> soup = BeautifulSoup(demo,"html.parser")
>>> soup.a.name
'a'
>>> soup.a.parent.name
'p'
>>> soup.a.parent.parent.name
'body'
>>> tag = soup.a
>>> tag.attrs
{'href': 'http://www.icourse163.org/course/BIT-268001', 'class': ['py1'], 'id': 'link1'}
>>> tag.attrs['class']
['py1']
>>> tag.attrs['href']
'http://www.icourse163.org/course/BIT-268001'
>>> type(tag.attrs)
<class 'dict'>
>>> type(tag)
<class 'bs4.element.Tag'>
>>> soup.a
<a class="py1" href="http://www.icourse163.org/course/BIT-268001" id="link1">Basic Python</a>
>>> soup.a.string
'Basic Python'
>>> soup.p
<p class="title"><b>The demo python introduces >>> soup.p.string
'The demo python introduces several python courses.'several python courses.</b></p>
>>> type(soup.p.string)
<class 'bs4.element.NavigableString'>
>>> newsoup = BeautifulSoup("<b><!--This is a comment--></b><p>This is not a comment </p>","html.parser")
>>> newsoup.b.string
'This is a comment'
>>> type(newsoup.b.string)
<class 'bs4.element.Comment'>
>>> newsoup.p.string
'This is not a comment '
>>> type(newsoup.p.string)
<class 'bs4.element.NavigableString'>

#基于bs4库的HTML内容遍历方法

回顾demo.html
>>> import requests
>>> r = requests.get("http://python123.io/ws/demo.html")
>>> demo = r.text
>>> demo
'<html><head><title>This is a python demo page</title></head>\r\n<body>\r\n<p class="title"><b>The demo python introduces several python courses.</b></p>\r\n<p class="course">Python is a wonderful general-purpose programming language. You can learn Python from novice to professional by tracking the following courses:\r\n<a href="http://www.icourse163.org/course/BIT-268001" class="py1" id="link1">Basic Python</a> and <a href="http://www.icourse163.org/course/BIT-1001870001" class="py2" id="link2">Advanced Python</a>.</p>\r\n</body></html>'

标签树的下行遍历
属性
.contents    #子节点得列表，将<tag>所有儿子节点存入列表
.children    #子节点得迭代类型，与.contents类似，用于循环遍历儿子节点
.descendants #子孙节点得迭代类型，包含所有子孙节点，用于循环遍历

>>> soup = BeautifulSoup(demo,"html.parser")
>>> soup.head
<head><title>This is a python demo page</title></head>
>>> soup.head.contents
[<title>This is a python demo page</title>]
>>> soup.body.contents
['\n', <p class="title"><b>The demo python introduces several python courses.</b></p>, '\n', <p class="course">Python is a wonderful general-purpose programming language. You can learn Python from novice to professional by tracking the following courses:

<a class="py1" href="http://www.icourse163.org/course/BIT-268001" id="link1">Basic Python</a> and <a class="py2" href="http://www.icourse163.org/course/BIT-1001870001" id="link2">Advanced Python</a>.</p>, '\n']
>>> len(soup.body.contents)
5
>>> soup.body.contents[1]
<p class="title"><b>The demo python introduces several python courses.</b></p>

#遍历儿子节点
for child in soup.body.children:
  print(child)
#遍历子孙节点
for child in soup.body.children:
  print(child)
  
  标签树的上行遍历
  属性
  .parent #节点的父亲标签
  .parents #节点的先辈标签的迭代类型，用于循环遍历先辈节点
  
>>> soup = BeautifulSoup(demo,"html.parser")
>>> soup.title.parent
<head><title>This is a python demo page</title></head>
>>> soup.html.parent
<html><head><title>This is a python demo page</title></head>
<body>
<p class="title"><b>The demo python introduces several python courses.</b></p>
<p class="course">Python is a wonderful general-purpose programming language. You can learn Python from novice to professional by tracking the following courses:

<a class="py1" href="http://www.icourse163.org/course/BIT-268001" id="link1">Basic Python</a> and <a class="py2" href="http://www.icourse163.org/course/BIT-1001870001" id="link2">Advanced Python</a>.</p>
</body></html>
>>> soup.parent

#标签树的上行遍历
>>> soup = BeautifulSoup(demo,"html.parser")
>>> for parent in soup.a.parents:
	if parent is None:
		print(parent)
	else:
		print(parent.name)

		
p
body
html
[document] 

标签树的平行遍历
属性
.next_sibling  #返回按照HTML文本顺序的下一个平行节点标签
.previous_sibling #返回按照HTML文本顺序的上一个平行节点标签
.next_siblings   #迭代类型，返回按照HTML文本顺序的后续所有平行节点标签
.previous_siblings #迭代类型，返回按照HTML文本顺序的前续所有平行节点标签

所有的平行遍历发生在同一个父节点下的各节点间
>>> soup = BeautifulSoup(demo,"html.parser")
>>> soup.a.next_sibling
' and '
>>> soup.a.next_sibling.next_sibling
<a class="py2" href="http://www.icourse163.org/course/BIT-1001870001" id="link2">Advanced Python</a>
>>> soup.a.previous_sibling
'Python is a wonderful general-purpose programming language. You can learn Python from novice to professional by tracking the following courses:\r\n'
>>> soup.a.previous_sibling.previous_sibling
>>> soup.a.parent
<p class="course">Python is a wonderful general-purpose programming language. You can learn Python from novice to professional by tracking the following courses:

<a class="py1" href="http://www.icourse163.org/course/BIT-268001" id="link1">Basic Python</a> and <a class="py2" href="http://www.icourse163.org/course/BIT-1001870001" id="link2">Advanced Python</a>.</p>

标签树的平行遍历
#遍历后续节点
for sibling in soup.a.next_siblings:
   print(sibling)
#遍历前续节点
for sibling in soup.a.previous_siblings:
   print(sibling)

基于bs4库的HTML格式化和编码
>>> import requests
>>> r = requests.get("http://python123.io/ws/demo.html")
>>> demo = r.text
>>> demo
'<html><head><title>This is a python demo page</title></head>\r\n<body>\r\n<p class="title"><b>The demo python introduces several python courses.</b></p>\r\n<p class="course">Python is a wonderful general-purpose programming language. You can learn Python from novice to professional by tracking the following courses:\r\n<a href="http://www.icourse163.org/course/BIT-268001" class="py1" id="link1">Basic Python</a> and <a href="http://www.icourse163.org/course/BIT-1001870001" class="py2" id="link2">Advanced Python</a>.</p>\r\n</body></html>'

bs4库的prettify()方法

>>> soup.prettify()
'<html>\n <head>\n  <title>\n   This is a python demo page\n  </title>\n </head>\n <body>\n  <p class="title">\n   <b>\n    The demo python introduces several python courses.\n   </b>\n  </p>\n  <p class="course">\n   Python is a wonderful general-purpose programming language. You can learn Python from novice to professional by tracking the following courses:\n   <a class="py1" href="http://www.icourse163.org/course/BIT-268001" id="link1">\n    Basic Python\n   </a>\n   and\n   <a class="py2" href="http://www.icourse163.org/course/BIT-1001870001" id="link2">\n    Advanced Python\n   </a>\n   .\n  </p>\n </body>\n</html>'
>>> print(soup.prettify())
<html>
 <head>
  <title>
   This is a python demo page
  </title>
 </head>
 <body>
  <p class="title">
   <b>
    The demo python introduces several python courses.
   </b>
  </p>
  <p class="course">
   Python is a wonderful general-purpose programming language. You can learn Python from novice to professional by tracking the following courses:
   <a class="py1" href="http://www.icourse163.org/course/BIT-268001" id="link1">
    Basic Python
   </a>
   and
   <a class="py2" href="http://www.icourse163.org/course/BIT-1001870001" id="link2">
    Advanced Python
   </a>
   .
  </p>
 </body>
</html>

pretiffy（）可以为HTML文本、标签和内容增加换行符
>>> print(soup.a.prettify())
<a class="py1" href="http://www.icourse163.org/course/BIT-268001" id="link1">
 Basic Python
</a>


>>> soup =BeautifulSoup("<p>中文</p>","html.parser")
>>> soup.p.string
'中文'
>>> print(soup.p.prettify())
<p>
 中文
</p>


















